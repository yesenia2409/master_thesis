Running simulation
Loading checkpoint shards:   0%|          | 0/6 [00:00<?, ?it/s]Loading checkpoint shards:  17%|█▋        | 1/6 [00:03<00:18,  3.68s/it]Loading checkpoint shards:  33%|███▎      | 2/6 [00:07<00:14,  3.68s/it]Loading checkpoint shards:  50%|█████     | 3/6 [00:11<00:11,  3.78s/it]Loading checkpoint shards:  67%|██████▋   | 4/6 [00:16<00:09,  4.54s/it]Loading checkpoint shards:  83%|████████▎ | 5/6 [00:20<00:04,  4.32s/it]Loading checkpoint shards: 100%|██████████| 6/6 [00:21<00:00,  3.19s/it]Loading checkpoint shards: 100%|██████████| 6/6 [00:21<00:00,  3.65s/it]
WARNING:root:A <class 'transformers.models.llama.modeling_llama.LlamaForCausalLM'> model is loaded from '../SFT/merged_model/SFT_for_expert_alignment/', and no v_head weight is found. This IS expected if you are not resuming PPO training.
Done loading Policy Model and Tokenizer!
You are using the legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This means that tokens that come after special tokens will not be properly handled. We recommend you to read the related pull request available at https://github.com/huggingface/transformers/pull/24565
Done loading Reward Model and Tokenizer!
Map:   0%|          | 0/17427 [00:00<?, ? examples/s]Map:   1%|▏         | 219/17427 [00:00<00:07, 2172.33 examples/s]Map:   3%|▎         | 453/17427 [00:00<00:07, 2263.66 examples/s]Map:   4%|▍         | 783/17427 [00:00<00:07, 2219.73 examples/s]Map:   6%|▋         | 1110/17427 [00:00<00:09, 1794.20 examples/s]Map:   8%|▊         | 1337/17427 [00:00<00:08, 1913.95 examples/s]Map:   9%|▉         | 1567/17427 [00:00<00:07, 2015.94 examples/s]Map:  10%|█         | 1791/17427 [00:00<00:07, 2075.92 examples/s]Map:  12%|█▏        | 2112/17427 [00:01<00:08, 1791.41 examples/s]Map:  13%|█▎        | 2341/17427 [00:01<00:07, 1904.98 examples/s]Map:  15%|█▍        | 2569/17427 [00:01<00:07, 1996.17 examples/s]Map:  16%|█▌        | 2800/17427 [00:01<00:07, 2077.74 examples/s]Map:  18%|█▊        | 3114/17427 [00:01<00:07, 1814.70 examples/s]Map:  19%|█▉        | 3347/17427 [00:01<00:07, 1928.56 examples/s]Map:  21%|██        | 3579/17427 [00:01<00:06, 2023.61 examples/s]Map:  22%|██▏       | 3808/17427 [00:01<00:06, 2089.28 examples/s]Map:  24%|██▎       | 4119/17427 [00:02<00:07, 1814.31 examples/s]Map:  25%|██▍       | 4350/17427 [00:02<00:06, 1925.75 examples/s]Map:  26%|██▋       | 4584/17427 [00:02<00:06, 2020.40 examples/s]Map:  28%|██▊       | 4811/17427 [00:02<00:06, 2083.18 examples/s]Map:  29%|██▉       | 5104/17427 [00:02<00:06, 1765.63 examples/s]Map:  31%|███       | 5329/17427 [00:02<00:06, 1874.86 examples/s]Map:  32%|███▏      | 5566/17427 [00:02<00:05, 1995.67 examples/s]Map:  33%|███▎      | 5787/17427 [00:02<00:05, 2048.42 examples/s]Map:  35%|███▌      | 6113/17427 [00:03<00:06, 1736.66 examples/s]Map:  36%|███▋      | 6339/17427 [00:03<00:05, 1849.48 examples/s]Map:  38%|███▊      | 6571/17427 [00:03<00:05, 1958.82 examples/s]Map:  39%|███▉      | 6794/17427 [00:03<00:05, 2022.62 examples/s]Map:  41%|████      | 7104/17427 [00:03<00:05, 1759.36 examples/s]Map:  42%|████▏     | 7372/17427 [00:03<00:05, 1765.05 examples/s]Map:  44%|████▎     | 7600/17427 [00:03<00:05, 1877.59 examples/s]Map:  45%|████▍     | 7814/17427 [00:04<00:04, 1938.83 examples/s]Map:  47%|████▋     | 8107/17427 [00:04<00:05, 1726.40 examples/s]Map:  48%|████▊     | 8333/17427 [00:04<00:04, 1843.72 examples/s]Map:  49%|████▉     | 8560/17427 [00:04<00:04, 1946.74 examples/s]Map:  50%|█████     | 8779/17427 [00:04<00:04, 2001.80 examples/s]Map:  52%|█████▏    | 9000/17427 [00:04<00:04, 1713.23 examples/s]Map:  53%|█████▎    | 9220/17427 [00:04<00:04, 1827.50 examples/s]Map:  54%|█████▍    | 9464/17427 [00:04<00:04, 1980.49 examples/s]Map:  56%|█████▌    | 9682/17427 [00:05<00:03, 2032.07 examples/s]Map:  57%|█████▋    | 9908/17427 [00:05<00:03, 2094.18 examples/s]Map:  59%|█████▊    | 10208/17427 [00:05<00:04, 1725.27 examples/s]Map:  60%|█████▉    | 10432/17427 [00:05<00:03, 1840.33 examples/s]Map:  61%|██████    | 10664/17427 [00:05<00:03, 1953.07 examples/s]Map:  62%|██████▏   | 10888/17427 [00:05<00:03, 2023.40 examples/s]Map:  64%|██████▎   | 11105/17427 [00:05<00:03, 1705.10 examples/s]Map:  65%|██████▌   | 11340/17427 [00:05<00:03, 1859.17 examples/s]Map:  66%|██████▋   | 11565/17427 [00:06<00:02, 1958.43 examples/s]Map:  68%|██████▊   | 11779/17427 [00:06<00:02, 2003.43 examples/s]Map:  69%|██████▉   | 12000/17427 [00:06<00:03, 1706.46 examples/s]Map:  70%|███████   | 12232/17427 [00:06<00:02, 1856.82 examples/s]Map:  71%|███████▏  | 12455/17427 [00:06<00:02, 1952.24 examples/s]Map:  73%|███████▎  | 12679/17427 [00:06<00:02, 2024.37 examples/s]Map:  74%|███████▍  | 12896/17427 [00:06<00:02, 2061.20 examples/s]Map:  75%|███████▌  | 13110/17427 [00:06<00:02, 1726.92 examples/s]Map:  77%|███████▋  | 13339/17427 [00:06<00:02, 1866.30 examples/s]Map:  78%|███████▊  | 13566/17427 [00:07<00:01, 1971.43 examples/s]Map:  79%|███████▉  | 13804/17427 [00:07<00:01, 2081.44 examples/s]Map:  81%|████████  | 14111/17427 [00:07<00:01, 1814.29 examples/s]Map:  82%|████████▏ | 14334/17427 [00:07<00:01, 1911.25 examples/s]Map:  84%|████████▎ | 14570/17427 [00:07<00:01, 2023.22 examples/s]Map:  85%|████████▍ | 14802/17427 [00:07<00:01, 2099.19 examples/s]Map:  87%|████████▋ | 15113/17427 [00:07<00:01, 1846.65 examples/s]Map:  88%|████████▊ | 15337/17427 [00:08<00:01, 1933.16 examples/s]Map:  89%|████████▉ | 15577/17427 [00:08<00:00, 2047.83 examples/s]Map:  91%|█████████ | 15814/17427 [00:08<00:00, 2129.17 examples/s]Map:  92%|█████████▏| 16113/17427 [00:08<00:00, 1826.90 examples/s]Map:  94%|█████████▍| 16346/17427 [00:08<00:00, 1939.60 examples/s]Map:  95%|█████████▌| 16576/17427 [00:08<00:00, 2027.34 examples/s]Map:  96%|█████████▋| 16808/17427 [00:08<00:00, 2101.31 examples/s]Map:  98%|█████████▊| 17112/17427 [00:08<00:00, 1802.20 examples/s]Map: 100%|█████████▉| 17343/17427 [00:09<00:00, 1916.94 examples/s]Map: 100%|██████████| 17427/17427 [00:09<00:00, 1913.83 examples/s]
Dataset({
    features: ['instruction', 'output', 'input_ids', 'attention_mask'],
    num_rows: 17427
})
epoch:   0%|          | 0/1 [00:00<?, ?it/s]Step:  0
Batch:  {'instruction': ['<s>[INST] <<SYS>>\nPlease answer the questions related to geoscience.\n<</SYS>>\nPlease extract the named entities in: The first fly fossil discovered from the Upper Jurassic Talbragar Fish Bed in Australia is described and illustrated. Based on a single, well preserved wing, Calosargus (Calosargus) talbragarensis new species is assigned to the extinct brachyceran family Archisargidae. Wing morphology suggests a relationship between this extinct family and Stratiomyidae. The Archisargidae have so far only been found in China, Kazakhstan and Mongolia. Calosargus Mostovski, 1997 currently comprises seven species from the Callovian (late Middle Jurassic) of China and three species from the Oxfordian (early Upper Jurassic) of Kazakhstan. This oldest brachyceran fossil from Australia and first record of the Archisargidae in the southern hemisphere presents evidence that higher flies were present in this region in the Jurassic, when this group is thought to have commenced its diversification..  [/INST]'], 'output': ['The named entities in the passage can be listed as follows: \n \nUpper Jurassic: Period\nFish: Geo_word\nBed: Geo_word\nAustralia: Location\nWing: Location\nChina: Location\nKazakhstan: Location\nMongolia: Location\nCallovian: Period\nMiddle Jurassic: Period\nChina: Location\nOxfordian: Period\nUpper Jurassic: Period\nKazakhstan: Location\nAustralia: Location\nJurassic: Period'], 'input_ids': [tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([2]), tensor([1]), tensor([2]), tensor([1]), tensor([518]), tensor([25580]), tensor([29962]), tensor([3532]), tensor([14816]), tensor([29903]), tensor([6778]), tensor([13]), tensor([12148]), tensor([1234]), tensor([278]), tensor([5155]), tensor([4475]), tensor([304]), tensor([1737]), tensor([359]), tensor([15277]), tensor([29889]), tensor([13]), tensor([29966]), tensor([829]), tensor([14816]), tensor([29903]), tensor([6778]), tensor([13]), tensor([12148]), tensor([6597]), tensor([278]), tensor([4257]), tensor([16212]), tensor([297]), tensor([29901]), tensor([450]), tensor([937]), tensor([11340]), tensor([21983]), tensor([309]), tensor([10943]), tensor([515]), tensor([278]), tensor([24929]), tensor([16081]), tensor([465]), tensor([293]), tensor([10288]), tensor([29890]), tensor([1431]), tensor([279]), tensor([12030]), tensor([14195]), tensor([297]), tensor([8314]), tensor([338]), tensor([5439]), tensor([322]), tensor([26848]), tensor([29889]), tensor([16564]), tensor([373]), tensor([263]), tensor([2323]), tensor([29892]), tensor([1532]), tensor([21634]), tensor([21612]), tensor([29892]), tensor([3037]), tensor([359]), tensor([1191]), tensor([375]), tensor([313]), tensor([7856]), tensor([359]), tensor([1191]), tensor([375]), tensor([29897]), tensor([5969]), tensor([29890]), tensor([1431]), tensor([279]), tensor([6322]), tensor([716]), tensor([6606]), tensor([338]), tensor([9859]), tensor([304]), tensor([278]), tensor([1294]), tensor([5562]), tensor([4105]), tensor([23766]), tensor([2265]), tensor([273]), tensor([3942]), tensor([2595]), tensor([275]), tensor([1191]), tensor([3898]), tensor([29889]), tensor([27792]), tensor([18131]), tensor([3002]), tensor([14661]), tensor([263]), tensor([9443]), tensor([1546]), tensor([445]), tensor([1294]), tensor([5562]), tensor([3942]), tensor([322]), tensor([3767]), tensor([2219]), tensor([16103]), tensor([3898]), tensor([29889]), tensor([450]), tensor([2595]), tensor([275]), tensor([1191]), tensor([3898]), tensor([505]), tensor([577]), tensor([2215]), tensor([871]), tensor([1063]), tensor([1476]), tensor([297]), tensor([7551]), tensor([29892]), tensor([15198]), tensor([19426]), tensor([14411]), tensor([322]), tensor([21952]), tensor([18001]), tensor([29889]), tensor([3037]), tensor([359]), tensor([1191]), tensor([375]), tensor([7849]), tensor([586]), tensor([2574]), tensor([29892]), tensor([29871]), tensor([29896]), tensor([29929]), tensor([29929]), tensor([29955]), tensor([5279]), tensor([7199]), tensor([4637]), tensor([9881]), tensor([6606]), tensor([515]), tensor([278]), tensor([3037]), tensor([5590]), tensor([713]), tensor([313]), tensor([9632]), tensor([14253]), tensor([16081]), tensor([465]), tensor([293]), tensor([29897]), tensor([310]), tensor([7551]), tensor([322]), tensor([2211]), tensor([6606]), tensor([515]), tensor([278]), tensor([11045]), tensor([713]), tensor([313]), tensor([799]), tensor([368]), tensor([24929]), tensor([16081]), tensor([465]), tensor([293]), tensor([29897]), tensor([310]), tensor([15198]), tensor([19426]), tensor([14411]), tensor([29889]), tensor([910]), tensor([23947]), tensor([4105]), tensor([23766]), tensor([2265]), tensor([273]), tensor([21983]), tensor([309]), tensor([515]), tensor([8314]), tensor([322]), tensor([937]), tensor([2407]), tensor([310]), tensor([278]), tensor([2595]), tensor([275]), tensor([1191]), tensor([3898]), tensor([297]), tensor([278]), tensor([14841]), tensor([9736]), tensor([275]), tensor([9085]), tensor([22981]), tensor([10757]), tensor([393]), tensor([6133]), tensor([285]), tensor([3687]), tensor([892]), tensor([2198]), tensor([297]), tensor([445]), tensor([5120]), tensor([297]), tensor([278]), tensor([16081]), tensor([465]), tensor([293]), tensor([29892]), tensor([746]), tensor([445]), tensor([2318]), tensor([338]), tensor([2714]), tensor([304]), tensor([505]), tensor([844]), tensor([9223]), tensor([967]), tensor([6894]), tensor([2450]), tensor([636]), tensor([29871]), tensor([518]), tensor([29914]), tensor([25580]), tensor([29962])], 'attention_mask': [tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([0]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1]), tensor([1])]}
Query Temsors:  512
Query Temsors:  <class 'list'>
/home/tu/tu_tu/tu_zxojp43/.local/lib/python3.9/site-packages/transformers/generation/utils.py:1468: UserWarning: You are calling .generate() with the `input_ids` being on a device type different than your model's device. `input_ids` is on cpu, whereas the model is on cuda. You may experience unexpected behaviors or slower generation. Please make sure that you have put `input_ids` to the correct device by calling for example input_ids = input_ids.to('cuda') before running `.generate()`.
  warnings.warn(
slurmstepd: error: *** JOB 3938068 ON m03c02 CANCELLED AT 2024-06-25T11:58:20 ***
